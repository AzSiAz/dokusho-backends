services:
  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    restart: unless-stopped
    container_name: flaresolverr
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://flaresolverr:${FLARESOLVERR_PORT:-8191}/health || exit 1",
        ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    environment:
      TZ: ${TZ:-Europe/Paris}
      PORT: ${FLARESOLVERR_PORT:-8191}
      LOG_LEVEL: ${FLARESOLVERR_LOG_LEVEL:-debug}

  sources:
    build:
      context: .
      dockerfile: docker/sources.Dockerfile
    develop:
      watch:
        - path: cmd/sources
          action: rebuild
        - path: pkg
          action: rebuild
    image: ghcr.io/azsiaz/dokusho-sources:latest
    container_name: sources
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://sources:${SOURCES_PORT:-8080}/api/v1/sources/health || exit 1",
        ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      flaresolverr:
        condition: service_healthy
        restart: true
        required: true
    ports:
      - ${SOURCES_SOURCES_OUTSIDE_PORT:-8080}:${SOURCES_PORT:-8080}
    environment:
      TZ: ${TZ:-Europe/Paris}
      PORT: ${SOURCES_PORT:-8080}
      LOG_LEVEL: ${SOURCES_LOG_LEVEL:-debug}
      SOURCE_USE_FLARESOLVER: ${SOURCES_SOURCE_USE_FLARESOLVER:-true}
      SOURCE_FLARESOLVER_URL: ${SOURCES_SOURCE_FLARESOLVER_URL:-http://flaresolverr:${FLARESOLVERR_PORT:-8191}}
      SOURCE_USE_API_KEY: ${SOURCES_SOURCE_USE_API_KEY:-true}
      SOURCE_API_KEY: ${SOURCES_SOURCE_API_KEY:-my-api-key}
